{"version":3,"sources":["components/Header.js","components/Search.js","components/Note.js","components/AddNote.js","components/NotesList.js","App.js","index.js"],"names":["Header","className","Search","handleSearchNote","size","onChange","event","target","value","type","placeholder","Note","id","text","date","handleDeleteNote","onClick","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","length","trim","NotesList","notes","map","note","App","nanoid","setNotes","searchText","setSearchText","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAUeA,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,6C,OCWSC,EAbA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,OACE,sBAAKF,UAAU,SAAf,UACE,cAAC,IAAD,CAAUA,UAAU,cAAcG,KAAK,UACvC,uBACEC,SAAU,SAACC,GAAD,OAAWH,EAAiBG,EAAMC,OAAOC,QACnDC,KAAK,OACLC,YAAY,0BCQLC,EAhBF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAC9B,OACE,sBAAKd,UAAU,OAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BY,IAC7B,sBAAKZ,UAAU,cAAf,UACE,gCAAQa,IACR,cAAC,IAAD,CACEb,UAAU,cACVG,KAAK,QACLY,QAAS,kBAAMD,EAAiBH,aCuB3BK,EAjCC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OACE,sBAAKpB,UAAU,WAAf,UACE,0BACEqB,KAAK,IACLC,KAAK,KACLb,YAAY,wBACZL,SAjBe,SAACC,GAFC,IAGAA,EAAMC,OAAOC,MAAMgB,QAAU,GAChDH,EAAYf,EAAMC,OAAOC,UAiBzB,sBAAKP,UAAU,cAAf,UACE,kCAtBiB,IAsBQmB,EAASI,OAAlC,eACA,wBAAQR,QAhBK,WACbI,EAASK,OAAOD,OAAS,IAC3BN,EAAcE,GACdC,EAAY,MAamBpB,UAAU,OAAvC,yBCNOyB,EAhBG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOT,EAAsC,EAAtCA,cAAeH,EAAuB,EAAvBA,iBACzC,OACE,sBAAKd,UAAU,aAAf,UACG0B,EAAMC,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACEjB,GAAIiB,EAAKjB,GACTC,KAAMgB,EAAKhB,KACXC,KAAMe,EAAKf,KACXC,iBAAkBA,OAGtB,cAAC,EAAD,CAASG,cAAeA,QCuCfY,EAjDH,WACV,MAA0BX,mBAAS,CACjC,CAAEP,GAAImB,cAAUlB,KAAM,sBAAuBC,KAAM,cACnD,CAAEF,GAAImB,cAAUlB,KAAM,qBAAsBC,KAAM,gBAFpD,mBAAOa,EAAP,KAAcK,EAAd,KAKA,EAAoCb,mBAAS,IAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,yBAC/CJ,GACFJ,EAASI,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,uBAAwBJ,KAAKK,UAAUf,MAC3D,CAACA,IAiBJ,OACE,sBAAK1B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQE,iBAAkB+B,IAC1B,cAAC,EAAD,CACEP,MAAOA,EAAMgB,QAAO,SAACd,GAAD,OAClBA,EAAKhB,KAAK+B,cAAcC,SAASZ,EAAWW,kBAE9C1B,cAvBU,SAACL,GACf,IAAMC,EAAO,IAAIgC,KACXC,EAAU,CACdnC,GAAImB,cACJlB,KAAMA,EACNC,KAAMA,EAAKkC,sBAEPC,EAAQ,sBAAOtB,GAAP,CAAcoB,IAC5Bf,EAASiB,IAgBLlC,iBAba,SAACH,GAClB,IAAMmC,EAAUpB,EAAMgB,QAAO,SAACd,GAAD,OAAUA,EAAKjB,KAAOA,KACnDoB,EAASe,UC/BbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9bb84ce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>My Notes</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\nconst Search = ({ handleSearchNote }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <MdSearch className=\"search-icon\" size=\"1.3em\" />\r\n      <input\r\n        onChange={(event) => handleSearchNote(event.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"type to search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { MdDeleteForever } from \"react-icons/md\";\r\n\r\nconst Note = ({ id, text, date, handleDeleteNote }) => {\r\n  return (\r\n    <div className=\"note\">\r\n      <span className=\"note-text\">{text}</span>\r\n      <div className=\"note-footer\">\r\n        <small>{date}</small>\r\n        <MdDeleteForever\r\n          className=\"delete-icon\"\r\n          size=\"1.3em\"\r\n          onClick={() => handleDeleteNote(id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { useState } from \"react\";\r\nconst AddNote = ({ handleAddNote }) => {\r\n  const [noteText, setNoteText] = useState(\"\");\r\n  const characterLimit = 200;\r\n\r\n  const handleChange = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteText(event.target.value);\r\n    }\r\n  };\r\n  const handleSave = () => {\r\n    if (noteText.trim().length > 0) {\r\n      handleAddNote(noteText);\r\n      setNoteText(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"note-new\">\r\n      <textarea\r\n        rows=\"8\"\r\n        cols=\"10\"\r\n        placeholder=\"Type to add a note...\"\r\n        onChange={handleChange}\r\n      ></textarea>\r\n      <div className=\"note-footer\">\r\n        <small>{characterLimit - noteText.length} Ramining</small>\r\n        <button onClick={handleSave} className=\"save\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import Note from \"./Note\";\r\nimport AddNote from \"./AddNote\";\r\nimport React from \"react\";\r\n\r\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {notes.map((note) => (\r\n        <Note\r\n          id={note.id}\r\n          text={note.text}\r\n          date={note.date}\r\n          handleDeleteNote={handleDeleteNote}\r\n        />\r\n      ))}\r\n      <AddNote handleAddNote={handleAddNote} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n","import { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport NotesList from \"./components/NotesList\";\nconst App = () => {\n  const [notes, setNotes] = useState([\n    { id: nanoid(), text: \"Hi! This is Alfred!\", date: \"2021/11/20\" },\n    { id: nanoid(), text: \"Hi! This is Simon!\", date: \"2021/11/21\" },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"alfred-note-app-data\"));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"alfred-note-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNote = notes.filter((note) => note.id !== id);\n    setNotes(newNote);\n  };\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search handleSearchNote={setSearchText} />\n      <NotesList\n        notes={notes.filter((note) =>\n          note.text.toLowerCase().includes(searchText.toLowerCase())\n        )}\n        handleAddNote={addNote}\n        handleDeleteNote={deleteNote}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}